# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master


pool:
  vmImage: windows-latest

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

steps:  

- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'JFrog Platform V2'
    command: |
      jf go-config --repo-resolve=go-remote --repo-deploy=go-local 
      jf go build 
      jf go-publish v1.0.0
      jf rt bce $(Build.DefinitionName) $(Build.BuildNumber)
      jf rt build-publish $(Build.DefinitionName) $(Build.BuildNumber)
- task: JFrogGo@1
  inputs:
    command: 'build'
    artifactoryConnection: 'jfrog v2 extension ecosys'
    resolutionRepo: 'go-virtual'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: JFrogPublishBuildInfo@1
  inputs:
    artifactoryConnection: 'jfrog v2 extension ecosys'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: JFrogAudit@1
  inputs:
    xrayConnection: 'xrayv2'
    watchesSource: 'none'
    licenses: false
    allowFailBuild: true

- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'install'
    artifactoryResolverService: 'jfrog v2 extension ecosys'
    targetResolveReleaseRepo: 'maven-virtual'
    targetResolveSnapshotRepo: 'maven-virtual'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    javaHomeOption: 'JDKVersion'
- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'JFrog Platform V2'
    useCustomVersion: true
    cliVersion: '2.34.0'
    command: jf audit    
- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'ecosys platform pass'
    command: 'jf audit'
